pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
-- saviour complex
-- by tamewhale

max_actors = 128
-- music(0, 0, 3)
debug = 0

function make_actor(k, x, y, d)
    local a = {}
    a.kind = k
    a.life = 1
    a.x = x 
    a.y = y 
    a.dx = 0 
    a.dy = 0
    a.ddy = 0.06 -- gravity
    a.w = 0.3 
    a.h = 0.5 -- half-width
    a.d = d 
    a.bounce = 0.8
    a.frame = 1  
    a.f0 = 0
    a.t = 0
    a.standing = false
    a.haskey = false
    if (count(actor) < max_actors) then
      add(actor, a)
    end
    return a
end

function make_sparkle(x, y, frame, col)
   local s = {}
   s.x = x
   s.y = y
   s.frame = frame
   s.col = col
   s.t = 0 
   s.max_t = 8 + rnd(4)
   s.dx = 0 
   s.dy = 0
   s.ddy = 0
   add(sparkle, s)
   return s
end

function make_player(x, y, d)
    pl = make_actor(1, x, y, d)
    pl.charge = 0
    pl.super  = 0
    pl.score  = 0
    pl.bounce = 0
    pl.delay  = 0
    pl.id     = 0 -- player 1
    pl.pal    = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15}
    return pl
end

-->8
-- called at start by pico-8
function _init()
    actor = {}
    sparkle = {}
    room = 0
    camera_x = 0
    camera_y = 0
    gravity_direction = 1
    level_complete = false
    
    -- spawn player
    for y = 0, 15 do 
        for x = 0 + room * 16, 0 + room * 16 + 15 do
            if (mget(x, y) == 48) then
                player = make_player(x, y + 1, 1)
            end
        end 
    end
    t = 0 
    death_t = 0
end

-- clear_cel using neighbour val
-- prefer empty, then non-ground
-- then left neighbour
function clear_cel(x, y)
    val0 = mget(x-1, y)
    val1 = mget(x+1, y)
    if (val0 == 0 or val1 == 0) then
        mset(x, y, 0)
    elseif (not fget(val1, 1)) then
        mset(x, y, val1)
    else
        mset(x, y, val0)
    end
end

function move_spawns()

    -- spawn anything in current room
    y0 = camera_y / 8
    x0 = camera_x / 8
    for y = y0, y0 + 15 do
        for x = x0, x0 + 15 do
            val = mget(x, y)
            m = nil

            -- pickup
            if (fget(val, 5)) then    
                m = make_actor(2, x + 0.5, y + 1, 1)
                m.f0 = val
                m.frame = val
                if (fget(val, 4)) then
                    m.ddy = 0 -- zero gravity
                end
            end

            -- prisoner
            if (fget(val, 3)) then
                m = make_actor(3, x + 0.5, y + 1, -1)
                m.f0 = val
                m.frame = val
            end
            
            -- clear cel if spawned something
            if (m ~= nil) then
                clear_cel(x, y)
            end
        end
    end

end

-- test if a point is solid
function is_solid(x, y)
    if (x < 0 or x >= 128) then
        return true 
    end
    
    val = mget(x, y)
    return fget(val, 1)
end

-- test for platforms that can be jumped through from below
-- but stop falling from above
function is_platform(x, y)
    val = mget(x, y)
    return fget(val, 2)
end

function is_solid_or_platform(x, y)
    local horizontal_deviation = 0.2
    return is_solid(x + horizontal_deviation, y) or
           is_solid(x - horizontal_deviation, y) or
           is_platform(x + horizontal_deviation, y) or
           is_platform(x - horizontal_deviation, y)
end

-->8
function move_pickup(a)
    a.frame = a.f0
    -- if (flr((t / 4) % 2) == 0) then
        -- a.frame = a.f0 + 1
    -- end
end

function room_transition()
    -- increment room number and move camera
    if (room >= 3) then
        room = 0
        camera_x = 0
    else
        room += 1
        -- move camera to next room
        camera_x += 16 * 8
    end
    -- reset gravity
    if (gravity_direction < 0) then
        reverse_gravity()
        -- todo: flip switches
    end
    -- move player x and y to the position of the player map tile
    for y = 0, 15 do 
        for x = 0 + room * 16, 0 + room * 16 + 15 do
            if (mget(x, y) == 48) then
                player.x = x
                player.y = y + 1
                player.d = 1
            end
        end 
    end
    -- destroy all actors except player
    for a in all(actor) do
        if (a.kind != 1) then
            del(actor, a)
        end
    end
    -- todo: reset room
end

function move_player(pl)

    local b = pl.id

    accel = 0.05
 
    if (not pl.standing) then
        accel = accel / 2
    end
  
    -- player control
    if (btn(0, b)) then 
        pl.dx = pl.dx - accel; 
        pl.d = -1 
    end
    if (btn(1, b)) then 
        pl.dx = pl.dx + accel; 
        pl.d = 1 
    end

    if ((btn(4, b) or btn(2, b)) and pl.standing) then
        pl.dy = -0.7 * gravity_direction
        sfx(8)
    end
    
    if (btnp(5, b)) then
        room_transition()
    end
 
    -- frame
    if (pl.standing) then
        pl.f0 = (pl.f0 + abs(pl.dx) * 2 + 4) % 4
    else
        pl.f0 = (pl.f0 + abs(pl.dx) / 2 + 4) % 4 
    end
 
    if (abs(pl.dx) < 0.1) then
        pl.frame = 48 
        pl.f0 = 0
    else
        pl.frame = 49 + flr(pl.f0)
    end    
end

function move_monster(m)
    m.dx = m.dx + m.d * 0.02
    m.f0 = (m.f0 + abs(m.dx) * 3 + 4) % 4
    m.frame = 112 + flr(m.f0)
    if (false and m.standing and rnd(100) < 1) then
        m.dy = -1
    end
end

function move_actor(pl)
    -- to do: replace with callbacks
    if (pl.kind == 1) then
        move_player(pl)
    end
 
    if (pl.kind == 2) then
        move_pickup(pl)
    end

    if (pl.kind == 3) then
        move_monster(pl)
    end

    pl.standing = false
 
    -- x movement 
    x1 = pl.x + pl.dx + sgn(pl.dx) * 0.3
      
    local broke_block = false

    if (not is_solid(x1, pl.y - 0.5)) then
        pl.x = pl.x + pl.dx  
    else -- hit wall
        -- search for contact point
        while (not is_solid(pl.x + sgn(pl.dx) * 0.3, pl.y - 0.5)) do
            pl.x = pl.x + sgn(pl.dx) * 0.1
        end

        -- destroy lock if player touches it holding key
        if (mget(x1, pl.y - 0.5, 0) == 46 and pl.haskey) then
            clear_cel(x1, pl.y - 0.5) -- remove lock
            make_debris(pl, x1)
            sfx(10)
            pl.haskey = false -- remove key
            -- make prisoner stand still
            for a in all(actor) do
                if (a.kind == 3) then
                    a.d = 0
                    a.dx = 0
                    a.frame = 2
                    a.f0 = 1
                end
            end
        end
        
        -- bounce 
        pl.dx = pl.dx * -0.5

        if (pl.kind == 3) then
            pl.d = pl.d * -1
            pl.dx = 0
        end

    end
    
    offset = 0
    if (gravity_direction == -1) then
        offset = -(9/8)
    end
    -- y movement
    if ((gravity_direction == 1 and pl.dy < 0) or (gravity_direction == -1 and pl.dy > 0)) then
        -- jumping up
        if (is_solid(pl.x - 0.2, pl.y + pl.dy - (1 * gravity_direction) + offset) or is_solid(pl.x + 0.2, pl.y + pl.dy - (1 * gravity_direction) + offset)) then
            pl.dy = 0
            -- search up for collision point
            while (not (is_solid(pl.x - 0.2, pl.y - (1 * gravity_direction) + offset) or is_solid(pl.x + 0.2, pl.y - (1 * gravity_direction) + offset))) do
                pl.y = pl.y - 0.01 * gravity_direction
            end
        else
            pl.y = pl.y + pl.dy
        end
    else
        -- falling down
        if (is_solid_or_platform(pl.x, pl.y + pl.dy + offset)) then
            -- bounce
            if (pl.bounce > 0 and abs(pl.dy) > 0.2) then
                pl.dy = pl.dy * -pl.bounce
            end
            
            if (gravity_direction < 0 and 
                (is_platform(pl.x + 0.2, pl.y + pl.dy + offset) or 
                 is_platform(pl.x + 0.2, pl.y + pl.dy + offset))
            ) then
                offset += 7/8
            end 
            --snap down
            while (not (is_solid_or_platform(pl.x, pl.y + offset))) do 
                pl.y = pl.y + 0.05 * gravity_direction
            end
            pl.standing = true
            pl.dy = 0
            --pop up even if bouncing
            while (is_solid_or_platform(pl.x, pl.y - (0.1 * gravity_direction) + offset)) do
                pl.y = pl.y - 0.05 * gravity_direction
            end
        else
            pl.y = pl.y + pl.dy
        end
    end
    
    -- gravity and friction
    pl.dy = pl.dy + pl.ddy
    pl.dy = pl.dy * 0.95

    -- x friction
    if (pl.standing) then
        pl.dx = pl.dx * 0.8
    else
        pl.dx = pl.dx * 0.9
    end

    -- counters
    pl.t = pl.t + 1
end
-->8
function make_debris(pl, x1)
    for by = 0, 1 do
        for bx = 0, 1 do
            s = make_sparkle(
                0.25 + flr(x1) + bx * 0.5, 
                0.25 + flr(pl.y - 0.5) + by * 0.5,
                22, 
                0
            )
            s.dx = (bx - 0.5) / 4
            s.dy = (by - 0.5) / 4
            s.max_t = 30 
            s.ddy = 0.02
        end
    end
end

function collide_event(a1, a2)
    if (a1.kind == 1) then
        if (a2.kind == 2) then
            if (a2.frame == 64) then
                a1.super = 120
                a1.dx = a1.dx * 2
                -- a1.dy = a1.dy - 0.1
                -- a1.standing = false
                sfx(13)
            end

            -- gem
            if (a2.frame == 80) then
                a1.score = a1.score + 1
                sfx(9)
            end
            
            -- switch
            if (a2.frame == 70 or a2.frame == 72) then
                reverse_gravity()
                reverse_switches(a2.frame)
                -- change switch sprite
                a2.frame += 1
                a2.f0 = a2.frame
                -- del(actor, a2)
            end
            
            if (not (a2.frame > 69 and a2.frame < 74)) then
                del(actor, a2)
            end
        elseif (a2.kind == 3) then -- prisoner
            level_complete = true
        end
    end

    -- pickup key
    if (a1.haskey == false and a2.frame == 83) then
        a1.haskey = true
        del(actor, a2)
    end  
end

function reverse_gravity()
    gravity_direction *= -1
    for a in all(actor) do
        a.ddy *= -1
    end
end

function reverse_switches(activated_switch)
    opposite_switch = 73
    if (activated_switch == 72) then
        opposite_switch = 71
    end
    for a1 in all(actor) do 
        if (a1.frame == opposite_switch) then
            a1.frame -= 1
            a1.f0 = a1.frame
        end
    end
end

function move_sparkle(sp)
    if (sp.t > sp.max_t) then
        del(sparkle, sp)
    end
    sp.x = sp.x + sp.dx
    sp.y = sp.y + sp.dy
    sp.dy = sp.dy + sp.ddy
    sp.t = sp.t + 1
end

function collide(a1, a2)
    if (a1 == a2) then 
        return 
    end
    local dx = a1.x - a2.x
    local dy = a1.y - a2.y
    if (abs(dx) < a1.w + a2.w) then
        if (abs(dy) < a1.h + a2.h) then
            collide_event(a1, a2)
        end
    end
end

function collisions()
    for a1 in all(actor) do
        for a2 in all(actor) do
            collide(a1, a2)
        end
    end
end
-->8
function outgame_logic()
    if (death_t > 0) then
        death_t = death_t + 1
        if (death_t > 30 and btn(4) or btn(5)) then 
            music(-1)
            sfx(-1)
            sfx(0)
            dpal = {0,1,1,2,1,13,6,4,4,9,3,13,1,13,14}
            -- palette fade
            for i = 0, 40 do
                for j = 1, 15 do
                    col = j
                    for k = 1, ((i + (j % 5)) / 4) do
                        col = dpal[col]
                    end
                    pal(j, col, 1)
                end
                flip()
            end
            -- restart cart end of slice
            run()
        end
    end
end

function _update()
    if (not level_complete) then
        foreach(actor, move_actor)
        foreach(sparkle, move_sparkle)
        collisions()
        move_spawns(player.x, player.y)
        outgame_logic()
        t = t + 1
    else
        -- move prisoner and player to centre of screen
        for a in all(actor) do
            finalx = 48
            finaly = 56
            if (a.kind == 3) then
                finalx = 80
            end
            if (flr(a.x * 8) != finalx) then
                a.dx = (finalx - a.x * 8) / abs((finaly - a.y * 8))
                a.dy = (finaly - a.y * 8) / abs((finalx - a.x * 8))
                a.x += a.dx * 0.1
                a.y += a.dy * 0.1
            end
        end
    end
end

function draw_sparkle(s)
    if (s.col > 0) then
        for i = 1, 15 do
            pal(i, s.col)
        end
    end
    spr(s.frame, s.x * 8 - 4, s.y * 8 - 4)
    pal()
end

function draw_actor(pl)
    if (level_complete and pl.kind != 1 and pl.kind != 3) then
        -- when level is complete, only draw player and prisoner
        return
    end 
    if (pl.pal ~= nil) then
        for i = 1, 15 do
            -- pal(i, pl.pal[i])
        end
    end
    if (pl.charge ~= nil and pl.charge > 0) then 
        for i = 2, 15 do
            pal(i, 7 + ((pl.t / 2) % 8))
        end
        -- pal(2,7)
    end
    if (pl.super ~= nil and pl.super > 0) then 
        for i = 2, 15 do
            pal(i, 6 + ((pl.t / 2) % 2))
        end
    end
    spr(
        pl.frame, 
        pl.x * 8 - 4, 
        pl.y * 8 - 8, 
        1, 
        1, 
        pl.d < 0,
        gravity_direction < 0 and pl.kind != 2
        -- last line flips everything except pickups vertically
        -- if gravity is reversed
    )
    -- draw key on top of actor
    if (pl.haskey) then
        local sprdir = pl.d < 0 and 1 or 0;
        spr(83, 
            pl.x * 8 - (8 * sprdir), 
            pl.y * 8 - 8 - (1 * gravity_direction), 
            1, 
            1, 
            pl.d < 0, 
            gravity_direction < 0
        )
    end
    pal()
end
-->8
function _draw()
    -- background
    cls()
    -- map and actors
    camera(camera_x, camera_y)
    pal(12, 0)
    if (not level_complete) then
        mapdraw(0, 0, 0, 0, 128, 64, 1)
    else
        cursor(camera_x + 36, camera_y + 32)
        print("thanks i guess")
        cursor(camera_x + 28, camera_y + 64)
        print("press x to continue")
    end
    pal()
    if (not level_complete) then
        foreach (sparkle, draw_sparkle)
    end
    foreach (actor, draw_actor)    
    -- player score
    color(7)
    -- display debug info
    -- cursor(camera_x + 1, 1)
    -- print("x: " .. player.x)
    -- print("y: " .. player.y)

    if (death_t > 60) then
        print("press button to restart", 18 - 1, 10 - 0, 8 + (t / 4) % 2)
        print("press button to restart", 18, 10, 7)
    end 
end


__gfx__
0000000000000000000000003bb333bb3b3bb000000bb3b3999991993bb33bb33333333399999199b03330000003330b00000000fffffffffffffff4fffffff4
000000000000000000000000bbbbbbbb333bb000000bb3334444414433333bb3bb33bb3343bb4134b03330000003330b00000000000000000000000000000000
00000000007007003300000003330000333300000000333344444144bb3b33334b44b14443bb4144300000000000000300000000000000000044400004400044
00000000000770003300000003330555bb330000000033bb11111111bb1133bb1111111113331311b30330000003303b00000000000000000004440000440044
00000000000770000000000000000555bb305550055503bb99199999391939bb991999999b19999b330330000003303300005500000000000000444000044044
00000000007007000033000000000000033055500555033044144444441444444414444444143334b30000000000003b00005500000000000000044400004044
000000000000000000330000000000000000555005550000441444444414444444144444431bbb34333055000055033333300003000000000000004400000044
00000000000000000000000000000000000000000000000011111111111111111111111111113b31033333333333333033333333000000000000000400000044
00000044000585000005000000000000000000000e0aa000000000000000000000000000cc5cccc5000000000000000ddddd2525dddddddd000000002525252d
000000550508555000040000000000000000000000d99090000000000000000000000000c555555500000077000000dd5ddd5252dddddddd000000005252525d
0000004455885555000500000000000000000000a9777d00009aa7000000000000000000555555550000077700000dd525d5dd252ddddd2500000000252525dd
0000004400888000000000000000000000000000a97779a000499a000000000000333300c5555555000077770000ddd252ddddd252dddd520000000052525ddd
00000044558a85050000000000000000000003000d7779a000499a000000000003333330cc5ccc5c00777777000dddd5252ddd252525d5250000000025252ddd
000000445558550500000000000000000300b0009099d0000045590000000000333a33335555c5550777777700dddd52525d52525252525200000000525252dd
0000004405555500000000000000000000b0b00000aa0e00000000000000000033a7a33355555555077777770dd5d525252525252525252500000000252525dd
00000055004f4000000000000000000000303030000300000000000000000000333a33335555c55577777777dd5dd2525252525252525252000000005252525d
000000000000000055055555550500000050000055550000333333333333333333333333bbbbbbbb000000000000000ddddd2525dddddddd9aaaaaa700000000
000000000000000055055555550500000050055055550000333333333333b33333333333bbbbbbbb77000000000000dddddd5252dddddddd4991199a00000000
0005550000005550550555555505000000000550555505553339a3333333bab3333333333333333377770000000000ddddd52525dddddddd4911119a00000000
000005000000555000000000000000000555055055550555339a7a33333bbb333333333333333333777770000000ddddddd25252dddddddd4911119a00000000
0555000005550000555550550000005505550000000005553399a93333333b33333333333bb33b3377777700000dddddddd52525dddddddd4991199a00000000
555505505555500055555055000000550555000000550000333993333b333333333333333bb333337777770000ddd5dddd525252dddddddd4991199a00000000
55550550555550005555505500000055000000000055000033333333333333333333333333333333777777700ddd5dddd5252525dddddddd4911119a00000000
0555550000000000000000000000000000500000000000003333333333333333333333333333333377777777d5ddddddd2525252dddddddd4555555900000000
000000000000000004ffff0004ffff00000000000000000000bbbbbbbbbbbb0033333333003333003bb3bbbbb0333000bbbb3bb30003330b0000000000000000
04ffff0004ffff0004fcfc0004fcfc0004ffff00000000000bbbbbbbbbbbbbb03333333303333330bbbbbbbbb0333000bbbbbbbb0003330b0000000000000000
04fcfc0004fcfc0004ffff0004ffff0004fcfc0000000000bb333333333333bb3333333333333333bb33333330000000333333bb000000030000000000000000
04ffff0004ffff0004f4440004f4440004ffff0000077000b33333333333333b3333333333333b33b33bb333b3033000333bb33b0003303b0000000000000000
04f4440004f44400001110000011100004f44400000770003333bb33333333333313313333333333b33bb33333033000333bb33b000330330000000000000000
001110000011100000ccc10001ccc00000111000000000003333bb3333bb3333313113133b33333333355550b3000000055553330000003b0000000000000000
00ccc00000ccc100010000000000010001ccc000000000003333333333bb33331311113133333333b3355550b30055000555533b0055003b0000000000000000
0010100000100000000000000000000000001000000000003333333333333333111111113333333333355550b0000000055553330000000b0000000000000000
00777700006666000077770000777700e7e7e7e7e7e7e7e7000000000000000099999999999999990000000000000000000000000eeeee000eeeee0000000000
070000700600006007000070070000702222222222222222000000000000000000bbbb0000bbbb00000000000eeeee000eeeee00eeeeeee0eeeeeee00eeeee00
700077076000770670099007700990072ff22fff2fff2f22000000000000000000bbbb000000000000000000eeeefee0eeeeeee0ef1ff1e0ef1ff1e0eeeeeee0
70b077076000770670999907709999072f222f2f2f2f2f220000000000000000000000000000000000000000ef1ff1e0ef1ff1e0eeffffe0eeffffe0ef1ff1e0
70ae000760c0000679999997799999972f2f2f2f2fff2f220000000000000000000000000000000000000000eeffffe0eeffffe0eeccce00eeccce00eeffffe0
707c8007607e000670099007700990072fff2fff2f2f2ff20088880000000000000000000000000000000000eeccce00eeccce000077780008777000eeccce00
07000070060000600709907007099070222222222222222200888800008888000000000000000000000000000077700000777800008000000000080008777000
00777700006666000077770000777700e7e7e7e7e7e7e7e799999999999999990000000000000000000000000080800000800000000000000000000000008000
0000000000000000000bb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000de000000ef0000000b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00d17e0000ed7f000994399000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0d1de7e00edef7f099a9979900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0efed1d00f7fede0949999a9aaa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00ef1d0000f7de0094499999a0aaaaa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000ed000000fe00009449990a0a0a0a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000999900aaa000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000007070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000700000000700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000077770000777700076767670076667000076700006767600000000000000000000000000000000000000000000000000000000000000000
0077770000777700077787700777e770000050000000500000005000000050000000000000000000000000000000000000000000000000000000000000000000
077787700777b7700777777007777770007777000077770000777700007777000000000000000000000000000000000000000000000000000000000000000000
07777770077777700717771007177710077787700777877007778770077787700000000000000000000000000000000000000000000000000000000000000000
07177710071777100777777007777770071777100717771007177710071777100000000000000000000000000000000000000000000000000000000000000000
0777777007777770a999999009a99990077777700777777007777770077777700000000000000000000000000000000000000000000000000000000000000000
0999999a0999999000000a000000000a099999900999999009999990099999900000000000000000000000000000000000000000000000000000000000000000
00a000000a0000a0000000000000000000a00a0000a000a00a0000a00a000a000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000c3d300c3c300d30000c3d300050000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000a300a3b300a30000a3b300c30000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000a300a3c300a3c300a30000a30000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000b1f00000000000000000000000a1a200000000000000000000000000a300c3c3c3c3c3c3c3c3c3c30000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000b1c00000b2c2d0f0b1f00000000000a1a2a1a3a3a200000000000000000000a3a3a300000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
c0b2c2d0f0b2d2c2d0d0c1d0f00000b1a1a3a3a3a3a3a3a2a1a20000a1a200000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
d0d2c2d0d0d1d1d0d0d0d0d0d0c0b2c2a3a3a3a3a3a3a3a3a3a3a2a1a3a3a2a10000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
d0d1d0d0d0d0d0d0d0d0d0d0d0d0d1d0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a30000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a30000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a30000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a30000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a30000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a30000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000009000900090009000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000009090909090909000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000909090909090909090000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001c2c3c000000000000000000000000
00000000a0a0a005a005a0a0b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d1d2d3d000000000000000000000000
00000000a0a0a0a0a0a0a0b091000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e1e2e3e000000000000000000000000
0000000090a0a0a007a0b09190000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f1f2f3f000000000000000000000000
00000000909090909090909090000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00003030303030303030303030303000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000002020202020202020202020293000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00828282828282606060608282828282000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
93828282828282606060608282828272000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
83838383838383606060608383838383000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
30303030303030303030303030303030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
20202020202020202020202020202020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000010301011313131303030305050501010101010103030101000000000000010101010101010101030100000003000000000000000303010103030303000020002000010131313131000000000000200020200000000000000000000000000000000000000000000000000000000008000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
000c0c0c0c0c0c0c0c0c0c0c0c0c0c00000c0c0c0c0c0c0c0c0c0c0c0c0c0000000c0c0c00000000000000000c0c0c00000c0c0c00000000000000000c0c0c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3d00000000000000000000000049003b3d000000000000000000005300003b003d0000000a0c0c0c0c0c0c0b0000003b3d0000000a0c0c0c0c0c0c0b0000003b3b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3d00530000000000000000000000003b3d003a0303030303033c000000003b003d000000002e007000002e000000003b3d000000002e007000002e000000003b3b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
053c003a033c000000000000000d0e3b3d000a0c0c0c0c0c0c053c003a0304003d0000003a0303030303033c0000003b3d0000003a0303030303033c0000003b3b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
003d003b003d0000000000000000003b3d00000070002e00000a0503040000003d0000000a0c0c0c0c0c0c0b0000003b3d0000000a0c0c0c0c0c0c0b0000003b3b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
003d003b003d0000000000110000003b000303030303033c00000a0c0c0002003d00000000000000000000000000003b3d00000000000000000000000000003b3b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
003d003b003d0000000000120000003b000c0c0c0000003d00250024490a00003d0000003a0303030303033c0000003b3d0000003a0303030303033c0000003b3b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
003d003b003d0000000000000000003b3d0000000a0c0c0b0000110000003b003d0000000a0c0c0c0c0c0c0b0000003b3d0000000a0c0c0c0c0c0c0b0000003b3b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
003d003b003d00000000000000003a043d000000000000002300120000000a003d00000000000000000000000000003b3d00000000000000000000000000003b3b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000503040005033c0000000000003b003d00000000000000000000000000003b3d00000007080708080806060000003b3d00000000000000000000000000003b3b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000c0c0c0c0c0c0b0000000000003b003d00000000000000000000000000003b3d00000006060906060609060000003b3d00000000000000000000000000003b3b005000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3d0000000000000000003a03030304003d00000000000000000000000000003b3d00000046494649464946490000003b3d00000000000000000000520000003b3b090009000900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3d0000000000001100000a0c0c0c0000053c000000000000000000000000003b3d00000009060708080708060000003b3d00000009060708080708060000003b3b090909090900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3d1446003000001200002e0070143b0000053c000000000046000000003a03043d00000000000000000000000053003b3d00000000000000000000000000003b3b000000070800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
050303030303030303030303030304000000053c30003a03033c00003a0400003d00300000000000000000000000003b3d00300000000000000000000000003b3b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000025000223000000000200000000000005030304000005030304000000000303030303030303030303030303000003030303030303030303030303030000005200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003a030303033c000000000009000000700000000900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003b000000003d000000000009070809070809070800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044450000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003b000000003d00000000003a0303030303030303033c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014140000
00000000000000000000000000000000000000000000000000000000000000000000000000000000130000000606000000000a0c0c0c0c0b00000000003b0000000000000000003d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000063a030303030303
000000000000000000000000000000000000000000000000000000000000000000000000003a0303030303030303033c000000000000000000000000000a0c0c0c0c0c0c0c0c0c0b00000000000000000000000000000006060000000000000000000000000000000000000000000000000000000000003a0304000000000000
000000000000000000000000000000000000000000000000000000000000000000000000003b0000000000000000003d0000000000000000000000000000000000000000000000000000003a03030303033c000000700006060000000000000000000000000050000000000000007000000000007000003b0000000000000000
000000000000000000000000000000000000000000000000000000000000130000000000003b0000000000000000003d0000000000000000000000000000000606060606060600000000003b0000000000050303030303033c007000140014001414000000141414000000003a03030303030303030303040000000000000000
00000000000000000000000000000000000014000000000000003a030303030303030303030400000000000000000005030303030303030303030303030303030303030303030370037003040000000000000000000000003d030303030303030303030303030303030303030400000000000000000000000000000000000000
0000000000000000000000000000000000030303030303030303040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
01030000185701c5701f57024570185701c5701f57024560185601c5601f56024560185501c5501f550245501a5501d5501f540245401a5301d5301f530235301a5301d5301f5301a5201d510215102451023515
01100000240452400528000280452b0450c005280450000529042240162d04500005307553c5252d000130052b0451f006260352b026260420c0052404500005230450c00521045230461f0450c0051c0421c025
01100000187451a7001c7001c7451d745187001c7451f7001a745247001d7451d70021745277002470023745217451f7001d7001d7451a7451b7001c7451f7001a745227001c7451b70018745187001f7451f700
01100000305453c52500600006003e625006000c30318600355250050000600006003e625006000060018600295263251529515006003e625006000060018600305250050018600006003e625246040060000600
01100000004750c47518475004750a475004750a4750c475004750a4750c475004750a4750c4751147513475004750c4750a475004750a475004750a4750c475004750c47516475004751647518475114750c475
01100000180721a0751b0721f0721e0751f0751e0721f075270752607724075200721f0751b0771a0751b07518072180621805218042180350000000000000000000000000000000000000000000000000000000
011000000c37518375243751f3751b3721a372193711b372183721837217371163511533114311133001830214302143021830218302003000030000300003000030000300003000030000300003000030000300
011000000c37300300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300
000000001e0701f070220702a020340103f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100002b7602e7503a73033740377302e75033730337303372035710377103a710337103a7103c7103c7003f700007000070000700007000070000700007000070000700007000070000700007000070000700
00020000276501d65013650106500c6400e63022620116300b63004630026101b6100861003610076101260013600106000d60010600116000e6001160012600116000a600066000960003600026000260002600
000100002257524575275652455527555275552b54524525225352252527525275252b5252e515305152e515305052e505305052e5053050530505335052b5052e5052b5052e5052e5053350530505335052e505
000200002005325043160231002304013030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0102000013571165731b5751d5711157313575165711b5731b575225711b573185751b5711f573245751b5711f57324565295611f563185611d555245532b5552b5412b5433053137535335333a5212b5252e513
000200002b071270711b07118071100710b0710607104071040610606103061040510305101041010310102101011040110000000000000000000000000000000000000000000000000000000000000000000000
010200002e17029170171731a171231631d16111143141610c1230a11107110001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100
01040000185702257024570225701f5701d5701f5701d57018570165701857016570135701157013570115700c5700d570135701457018560195501f550205302453024520225202452022510245102251024500
__music__
01 01434144
00 02434144
00 01034244
02 02034244
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144
00 41414144

